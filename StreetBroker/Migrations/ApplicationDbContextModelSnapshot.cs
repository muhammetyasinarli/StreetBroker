// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StreetBroker.Models;

namespace StreetBroker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("StreetBroker.Models.RepoOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CustomerId")
                        .HasColumnName("customer_id")
                        .HasColumnType("bigint");

                    b.Property<long>("DealerId")
                        .HasColumnName("dealer_id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("GrossInterestAmount")
                        .HasColumnName("gross_interest_amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("GrossInterestRate")
                        .HasColumnName("gross_interest_rate")
                        .HasColumnType("numeric(5,2)");

                    b.Property<decimal>("InterestRate")
                        .HasColumnName("net_interest_rate")
                        .HasColumnType("numeric(5,2)");

                    b.Property<DateTime>("Maturity")
                        .HasColumnName("maturity")
                        .HasColumnType("Date");

                    b.Property<decimal>("NetInterestAmount")
                        .HasColumnName("net_interest_amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<byte>("OrderStatus")
                        .HasColumnName("order_status")
                        .HasColumnType("smallint");

                    b.Property<byte>("RecordStatus")
                        .HasColumnName("record_status")
                        .HasColumnType("smallint");

                    b.Property<decimal>("ReturnGrossInterestAmount")
                        .HasColumnName("return_gross_interest_amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("ReturnNetInterestAmount")
                        .HasColumnName("return_net_interest_amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("start_date")
                        .HasColumnType("Date");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnName("tax_amount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("update_date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("repo_order","repo");
                });
#pragma warning restore 612, 618
        }
    }
}
